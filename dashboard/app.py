import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

df_group = pd.read_csv('../datasets/ad_seg_day.csv')
df = pd.read_csv('../datasets/dataset_tratado.csv')


st.title("An√°lise de an√∫ncios de marketing digital")
st.subheader("principais KPIs da base de dados")


col1, col2, col3,col4 = st.columns(4)


unique_ads = df['ad_x'][df['ad_x'].isin(['ad1, ad2, ad3'])].nunique()
col1.metric(label='Total de an√∫ncios √∫nicos', value=unique_ads)

unique_seg = df['segment_x'].nunique()
col2.metric(label='Total de segmentos √∫nicos', value=unique_seg)

total_impressions = df['impressions'].sum()
col3.metric(label='Total de impress√µes', value=f'{total_impressions:.0f}')

total_conversions = df['conversions'].sum()
col4.metric(label='Total de convers√µes', value=f'{total_conversions:.0f}')

select_segment = st.selectbox('Selecione um segmento', options=df['segment_x'][df['segment_x'].isin(['seg1','seg2','seg3'])].unique())

select_ad = st.selectbox('Selecione um anuncio', options=df['ad_x'][df['segment_x'].isin(['seg1','seg2','seg3'])].unique())
filtered_segment = df[(df['segment_x'] == select_segment) & (df['ad_x'] == select_ad)]
grouped_segment = filtered_segment.groupby('weekday')['conversions'].sum()
grouped_segment = grouped_segment.sort_values(ascending=False)
#st.bar_chart(grouped_segment)


fig, ax = plt.subplots()
width = 0.35
ind = np.arange(len(grouped_segment))
bars = ax.bar(ind, grouped_segment.values,width)

for bar in bars:
    yval = bar.get_height()
    ax.text(bar.get_x() + bar.get_width()/2, yval, int(yval), va='bottom')
    
ax.set_xticks(ind)
ax.set_xticklabels(grouped_segment.index)
st.pyplot(fig)



st.subheader('üìà Premissas estat√≠sticas:')
st.write('Tanto para a tabela de impress√µes quanto para a de convers√µes, houveram outliers, que foram removidos para balancear as m√©dias e an√°lises')
st.write('Ao juntar as duas tabelas, n√£o foi encontrada nenhuma correla√ß√£o positiva entre impress√µes e convers√µes. Portanto, impress√µes n√£o √© a melhor m√©trica para se analisar. √â necess√°rio extrair outra m√©trica que explique melhor as conves√µes para avan√ßar com modelos de regress√£o e recomenda√ß√£o mais precisos.')
st.write('N√£o foram encontradas datas em comum entre as duas tabelas. Portanto, segundo as bases de dados, nos dias que h√° impress√µes, n√£o h√° convers√µes')

st.subheader('üí° An√°lises e insights')
st.write('Segundo os dados apresentados,  por mais que o seg2 seja maior em impress√µes totais, proporcionalmente pelo n√∫mero de vezes em que se repete, os que possuem mais impress√µes s√£o seg1 e seg3.')
st.write('Todos os dias possuem uma m√©dia equilibrada de registros para impress√µes, por√©m o que mais possui relev√¢ncia em propor√ß√£o de impress√µes √© Quarta-feira (Wednesday), seguindo de domingo(Sunday). J√° em convers√µes, proporcioalmente tamb√©m, os melhores dias s√£o Ter√ßa-feira (Tuesday) e Quinta-feira (Thursday)')
st.write('O melhor an√∫ncio para impress√µes √© o ad2, mas que entrega melhores convers√µes √© o ad3.')
st.write('De modo geral, os melhores an√∫ncios s√£o ad1 e ad3.')
st.write('Para o seg1, o melhor an√∫ncio em taxa de convers√£o √© o ad3, com 41%.')
st.write('No seg2, o melhor an√∫ncio em taxa de convers√£o √© o ad1, com 54%.')
st.write('Para o seg3, o melhor an√∫ncio em taxa de convers√£o √© o ad3, com 35%.')
st.write('E para o seg4 o melhor an√∫ncio em taxa de convers√£o √© o ad1, com 40%.')
